name: Deploy to Production

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Install dependencies
        run: |
          npm install
      
      - name: Build project
        run: |
          npm run build
          
      - name: Create deployment package
        run: |
          tar -czf deploy.tar.gz .next node_modules package.json package-lock.json public
      
      - name: Setup SSH
        uses: webfactory/ssh-action@master
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          
      - name: Add known hosts
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          ssh-keyscan -p ${{ secrets.SERVER_PORT }} -v ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts 2>&1
          chmod 600 ~/.ssh/known_hosts
          
      - name: Test SSH connection
        run: |
          ssh -v -p ${{ secrets.SERVER_PORT }} ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} "echo 'SSH connection successful'"
          
      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            # 确保目录存在
            mkdir -p /www/wwwroot/tino-tools
            cd /www/wwwroot/tino-tools
            
            # 备份当前版本
            if [ -d ".next" ]; then
              mv .next .next_backup
            fi
            
            # 解压新版本
            tar -xzf deploy.tar.gz
            
            # 如果解压成功，删除备份
            if [ $? -eq 0 ]; then
              rm -rf .next_backup
            else
              # 如果解压失败，恢复备份
              mv .next_backup .next
              exit 1
            fi
            
            # 清理
            rm -f deploy.tar.gz
            
            # 重启应用
            export NODE_ENV=production
            pm2 reload tino-tools || pm2 start npm --name tino-tools -- start 