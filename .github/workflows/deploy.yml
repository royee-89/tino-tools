name: Deploy TinoTools

on:
  push:
    branches: [ master ]
  workflow_dispatch:
    inputs:
      reason:
        description: '部署原因'
        required: false
        default: '手动触发部署'

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
    
    - name: 设置Node.js环境
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: 安装依赖
      run: npm ci || npm install
    
    - name: 构建项目
      run: npm run build
    
    - name: 代码检查
      run: |
        echo "跳过代码检查"
        # npm run lint
    
    - name: 设置SSH密钥
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }}
        config: |
          Host server
            HostName ${{ secrets.SERVER_HOST }}
            User ${{ secrets.SERVER_USERNAME }}
            IdentityFile ~/.ssh/id_rsa
    
    - name: 部署到服务器
      run: |
        # 备份当前版本
        ssh server "cd /www/wwwroot/tinotools/main && tar -czf backup-$(date +%Y%m%d%H%M%S).tar.gz . || true"
        
        # 创建目录（如果不存在）
        ssh server "mkdir -p /www/wwwroot/tinotools/main"
        
        # 部署构建的项目
        scp -r .next server:/www/wwwroot/tinotools/main/
        scp -r public/* server:/www/wwwroot/tinotools/main/
        scp package.json next.config.js server:/www/wwwroot/tinotools/main/
        
        # 在服务器上安装生产依赖 - 改为完整安装以生成package-lock.json
        ssh server "cd /www/wwwroot/tinotools/main && npm install"
        
        # 设置正确的文件权限
        ssh server "find /www/wwwroot/tinotools/main -type f -exec chmod 644 {} \;"
        ssh server "find /www/wwwroot/tinotools/main -type d -exec chmod 755 {} \;"
        ssh server "chown -R nginx:nginx /www/wwwroot/tinotools/main"
        
        # 重启Next.js应用（如果使用PM2）
        ssh server "cd /www/wwwroot/tinotools/main && pm2 restart tino-tools || pm2 start npm --name 'tino-tools' -- start"
        
        # 验证部署
        echo "验证部署状态..."
        DEPLOY_CHECK=$(ssh server "ls -la /www/wwwroot/tinotools/main/next.config.js || echo 'Not found'")
        echo "$DEPLOY_CHECK"
        
        if [[ "$DEPLOY_CHECK" != *"Not found"* ]]; then
          echo "🎉 部署成功!"
        else
          echo "❌ 部署失败!"
          exit 1
        fi
    
    - name: 发送部署通知
      if: always()
      run: |
        STATUS="${{ job.status }}"
        if [ "$STATUS" = "success" ]; then
          echo "✅ 部署成功：TinoTools已成功部署到服务器(https://tinotools.cn)"
        else
          echo "❌ 部署失败：请检查日志确定原因"
        fi 